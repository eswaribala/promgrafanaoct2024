curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

or
#run this command from powershell

Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))


#install helm 

choco install kubernetes-helm


#Check helm version

helm version

#check helm repository list

helm repo list

#Add repository
helm repo add bitnami https://charts.bitnami.com/bitnami

#prometheus installation

Step 1: Add the Prometheus Helm Chart Repository

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

Update your Helm repository:
helm repo update
Step 2:
kubectl create namespace prometheus

Step3:

helm install prometheus prometheus-community/prometheus -n prometheus

Step 4:

helm list -n prometheus
Step5:

kubectl get pods -n prometheus
Step6:

Access Prometheus dashboard
kubectl port-forward -n prometheus svc/prometheus-server 9090:80

#test the prometheus
#go to browser
http://localhost:9090

#if node exporter fails run the patch
kubectl patch -n prometheus ds prometheus-prometheus-node-exporter --type "json" -p "[{"op": "remove", "path" : "/spec/template/spec/containers/0/volumeMounts/2/mountPropagation"}]"


#download prometheus configuration file from current instance


download values.yaml for modification
helm show values prometheus-community/prometheus > values.yaml

#grafana installation
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
helm install my-grafana grafana/grafana
kubectl get pods,svc
kubectl port-forward service/my-grafana 3000:80
kubectl get secret --namespace default my-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

#open grafana in browser
#add first data source
#select prometheus
# URL will be
http://host.docker.internal:9090

#integrate java api metrics to prometheus for pull metrics
 - job_name: 'customer-app'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['host.docker.internal:7074']

#after updating values.yaml file , send the updates to prometheus server

helm upgrade prometheus prometheus-community/prometheus -f values.yaml -n prometheus

#configure push gateway 
# go to cmd line
kubectl get svc -n prometheus
#port forward prometheus gateway
kubectl port-forward -n prometheus svc/<name push gateway service> 9091:9091

#send temporary job metric to push gateway
# open bash script
echo "example_metric 42.42" | curl --data-binary @- http://localhost:9091/metrics/job/my_job

#modify values.yaml to pull metrics from push gateway

- job_name: 'pushgateway'
        static_configs:
          - targets: ['prometheus-prometheus-pushgateway.prometheus.svc:9091']

#after save changes, run the following 


helm upgrade prometheus prometheus-community/prometheus -f values.yaml -n prometheus








